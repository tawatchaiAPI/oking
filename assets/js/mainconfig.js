const CONFIG = {
  API_BASE_URL: 'datascss/', // URL ‡∏Ç‡∏≠‡∏á API
  FETCH_DELAY: 1000, // ‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)
  ENDPOINTS: {
    GET_GROUPS: 'get-groups.php',
    DELETE_GROUP: 'delete-group.php',
    ADD_GROUP: 'add-group.php',
    EDIT_GROUP: 'edit_group.php',
  }
};

// üìå ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏•‡∏∏‡πà‡∏°
export async function fetchGroups() {
  try {
    const response = await fetch(CONFIG.API_BASE_URL + CONFIG.ENDPOINTS.GET_GROUPS);
    if (!response.ok) throw new Error(`‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÑ‡∏î‡πâ: ${response.status}`);
    const data = await response.json();
    return data;
  } catch (error) {
    console.error("‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏•‡∏∏‡πà‡∏°:", error);
    return [];
  }
}

// üìå ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏•‡∏∏‡πà‡∏°
export async function addGroup(groupName, chatIds) {
  if (!groupName || !chatIds) {
    return { status: 'error', message: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÅ‡∏•‡∏∞‡∏£‡∏´‡∏±‡∏™‡πÅ‡∏ä‡∏ó‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô' };
  }

  try {
    const response = await fetch(CONFIG.API_BASE_URL + CONFIG.ENDPOINTS.ADD_GROUP, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json; charset=UTF-8' },
      body: JSON.stringify({ group_name: groupName, chat_ids: chatIds })
    });

    if (!response.ok) throw new Error(`‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÑ‡∏î‡πâ: ${response.status}`);
    const result = await response.json();
    console.log("‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", result);
    return result;
  } catch (error) {
    console.error("‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏•‡∏∏‡πà‡∏°:", error);
    return { status: 'error', message: error.message };
  }
}

// üìå ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡∏ö‡∏Å‡∏•‡∏∏‡πà‡∏°
export async function deleteGroup(groupId) {
  if (!groupId) {
    console.error("‚ùå ‡∏£‡∏´‡∏±‡∏™‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á");
    return { status: 'error', message: '‡∏£‡∏´‡∏±‡∏™‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á' };
  }

  try {
    const response = await fetch(CONFIG.API_BASE_URL + CONFIG.ENDPOINTS.DELETE_GROUP, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json; charset=UTF-8' },
      body: JSON.stringify({ group_id: groupId })
    });

    const textResponse = await response.text();
    console.log("‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏î‡∏¥‡∏ö‡∏à‡∏≤‡∏Å delete-group.php:", textResponse); // Debug response ‡∏î‡∏¥‡∏ö

    if (!response.ok) {
      throw new Error(`‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÑ‡∏î‡πâ: ${response.status} ${response.statusText}`);
    }

    let result;
    try {
      result = JSON.parse(textResponse);
      console.log("‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡πÅ‡∏õ‡∏•‡∏á‡πÅ‡∏•‡πâ‡∏ß:", result); // Debug ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå JSON
    } catch (jsonError) {
      console.error("‚ùå ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà JSON:", textResponse);
      return { status: 'error', message: `‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á: ${textResponse}` };
    }

    return result;
  } catch (error) {
    console.error("‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Å‡∏•‡∏∏‡πà‡∏°:", error);
    return { status: 'error', message: error.message };
  }
}

// üìå ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏•‡∏∏‡πà‡∏°
export async function editGroup(id, groupName, chatIds) {
  if (!id || !groupName || !chatIds) {
    return { status: 'error', message: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô' };
  }

  try {
    const response = await fetch(CONFIG.API_BASE_URL + CONFIG.ENDPOINTS.EDIT_GROUP, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json; charset=UTF-8' },
      body: JSON.stringify({ id, group_name: groupName, chat_ids: chatIds })
    });

    if (!response.ok) throw new Error(`‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÑ‡∏î‡πâ: ${response.status}`);
    const result = await response.json();
    console.log("‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", result);
    return result;
  } catch (error) {
    console.error("‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏•‡∏∏‡πà‡∏°:", error);
    return { status: 'error', message: error.message };
  }
}

// üìå ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á
function updateTable(data, tableId) {
  const tableBody = document.getElementById(tableId);
  if (!tableBody) {
    console.error(`‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ ID '${tableId}'`);
    return;
  }

  tableBody.innerHTML = '<tr><td colspan="4" class="text-center">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</td></tr>';
  setTimeout(() => {
    tableBody.innerHTML = "";
    if (data.length === 0) {
      tableBody.innerHTML = '<tr><td colspan="4" class="text-center">‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏•‡∏∏‡πà‡∏°</td></tr>';
      return;
    }

    data.forEach(row => {
      const chatIds = row.chat_ids ? row.chat_ids.split(",").map(id => id.trim()).join(", ") : "-";
      const tr = document.createElement("tr");
      tr.innerHTML = `
        <td>${row.group_id}</td>
        <td>${row.group_name}</td>
        <td>${chatIds}</td>
        <td>
          <button class="btn btn-sm btn-primary edit" data-id="${row.group_id}" data-name="${row.group_name}" data-chat-ids="${row.chat_ids}">‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</button>
          <button class="btn btn-sm btn-danger delete" data-id="${row.group_id}">‡∏•‡∏ö</button> 
        </td>
      `;
      tableBody.appendChild(tr);
    });
  }, CONFIG.FETCH_DELAY);
}

// üìå ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ï‡∏≤‡∏£‡∏≤‡∏á
function setupTableEventListeners(tableId) {
  const tableBody = document.getElementById(tableId);
  if (!tableBody) {
    console.error(`‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ ID '${tableId}'`);
    return;
  }

  tableBody.addEventListener("click", async (event) => {
    console.log("‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà:", event.target.className); // Debug ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏¥‡∏Å

    // ‡∏Å‡∏£‡∏ì‡∏µ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏° "‡∏•‡∏ö"
    if (event.target.classList.contains("delete")) {
      const groupId = event.target.getAttribute("data-id");
      console.log("‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏•‡∏ö‡∏Å‡∏•‡∏∏‡πà‡∏° ID:", groupId); // Debug

      if (confirm("‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?")) {
        const response = await deleteGroup(groupId);
        console.log("‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Å‡∏≤‡∏£‡∏•‡∏ö:", response); // Debug ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå

        if (response && response.status === 'success') {
          alert("‚úÖ ‡∏•‡∏ö‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
          fetchGroupsForTable(tableId);
        } else {
          const errorMessage = response && response.message ? response.message : '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏';
          alert(`‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÑ‡∏î‡πâ: ${errorMessage}`);
        }
      } else {
        console.log("‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏•‡∏ö");
      }
    }

    // ‡∏Å‡∏£‡∏ì‡∏µ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏° "‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç"
    if (event.target.classList.contains("edit")) {
      const groupId = event.target.getAttribute("data-id");
      const currentName = event.target.getAttribute("data-name");
      const currentChatIds = event.target.getAttribute("data-chat-ids");

      // ‡πÄ‡∏ï‡∏¥‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á‡πÉ‡∏ô modal
      document.getElementById("editGroupId").value = groupId;
      document.getElementById("editGroupName").value = currentName;
      document.getElementById("editChatIds").value = currentChatIds;

      // ‡πÅ‡∏™‡∏î‡∏á modal
      const modal = new bootstrap.Modal(document.getElementById("editGroupModal"));
      modal.show();
    }
  });

  // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏à‡∏≤‡∏Å modal
  const saveButton = document.getElementById("saveEditGroup");
  if (saveButton) {
    saveButton.addEventListener("click", async () => {
      const groupId = document.getElementById("editGroupId").value;
      const groupName = document.getElementById("editGroupName").value.trim();
      const chatIds = document.getElementById("editChatIds").value.trim();

      if (!groupName || !chatIds) {
        alert("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÅ‡∏•‡∏∞‡∏£‡∏´‡∏±‡∏™‡πÅ‡∏ä‡∏ó‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô");
        return;
      }

      const response = await editGroup(groupId, groupName, chatIds);
      if (response.status === 'success') {
        alert("‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
        fetchGroupsForTable(tableId);
        bootstrap.Modal.getInstance(document.getElementById("editGroupModal")).hide();
      } else {
        alert(`‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÑ‡∏î‡πâ: ${response.message || '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏'}`);
      }
    });
  }
}

// üìå ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á
async function fetchGroupsForTable(tableId) {
  try {
    const data = await fetchGroups();
    updateTable(data, tableId);
  } catch (error) {
    console.error(`‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö ${tableId}:`, error);
  }
}

// üìå ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö
document.addEventListener("DOMContentLoaded", () => {
  const tableId = "groupTableBody";
  fetchGroupsForTable(tableId);
  setupTableEventListeners(tableId);

  const form = document.getElementById('addGroupForm');
  if (form) {
    form.addEventListener('submit', async (e) => {
      e.preventDefault();

      const groupName = document.getElementById('newGroupName').value.trim();
      const chatIds = document.getElementById('newChatIds').value.trim();

      if (!groupName || !chatIds) {
        alert("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÅ‡∏•‡∏∞‡∏£‡∏´‡∏±‡∏™‡πÅ‡∏ä‡∏ó‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô");
        return;
      }

      const response = await addGroup(groupName, chatIds);
      if (response.status === 'success') {
        alert('‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
        form.reset();
        fetchGroupsForTable(tableId);
      } else {
        alert(`‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÑ‡∏î‡πâ: ${response.message || '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏'}`);
      }
    });
  } else {
    console.error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏° 'addGroupForm'");
  }
});

export default CONFIG;